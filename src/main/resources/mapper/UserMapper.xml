<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 命名空间指向dao接口 -->
<mapper namespace="com.aaa.dao.UserMapper">
	<resultMap id="UserResultMap" type="com.aaa.entity.User">
		<result column="id" jdbcType="BIGINT" property="id" />
		<result column="login_name" jdbcType="VARCHAR" property="loginName" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="password" jdbcType="VARCHAR" property="password" />
		<result column="salt" jdbcType="VARCHAR" property="salt" />
		<result column="sex" jdbcType="TINYINT" property="sex" />
		<result column="age" jdbcType="TINYINT" property="age" />
		<result column="phone" jdbcType="VARCHAR" property="phone" />
		<result column="user_type" jdbcType="TINYINT" property="userType" />
		<result column="status" jdbcType="TINYINT" property="status" />
		<result column="organization_id" jdbcType="INTEGER" property="organizationId" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="path" jdbcType="VARCHAR" property="path" />
		<result column="email" jdbcType="VARCHAR" property="email" />
		<collection property="roles" ofType="com.aaa.entity.Role" resultMap="RoleResultMap">
		</collection>
	</resultMap>
	<resultMap id="RoleResultMap" type="com.aaa.entity.Role">
	<result column="role_id" jdbcType="BIGINT" property="id" />
	<result column="name" jdbcType="VARCHAR" property="name" />
	<result column="seq" jdbcType="TINYINT" property="seq" />
	<result column="description" jdbcType="VARCHAR" property="description" />
	<result column="status" jdbcType="TINYINT" property="status" />
	<collection property="resources" ofType="com.aaa.entity.Resource" resultMap="com.aaa.dao.ResourceMapper.BaseResultMap"></collection>
</resultMap>
	
	<select id="findByName" resultType="com.aaa.entity.User">
		select * from user where login_name=#{loginName}
	</select>
<!--	<select id="findRoleByUserId" parameterType="integer" resultType="com.aaa.entity.Role">
		select * from user_role ur inner join role r on ur.role_id=r.id where ur.user_id=#{id}
	</select>-->
	<select id="findRoleByUserId" parameterType="long" resultMap="RoleResultMap">
		select * from user_role ur left join role r on ur.role_id=r.id where ur.user_id=#{id}
	</select>
	<select id="findResourceByRoleIds" parameterType="long" resultMap="com.aaa.dao.ResourceMapper.BaseResultMap">
		select r.* from role_per rr left join permission r on rr.resource_id=r.id where rr.role_id =#{roleId}

	</select>
	<select id="findResourceByAdmin" resultMap="com.aaa.dao.ResourceMapper.BaseResultMap">
		select * from  permission
	</select>
	<select id="getLogin" parameterType="string" resultType="string">
		select name from user where login_name = #{asdas}
	</select>
	<update id="updatePw" parameterType="com.aaa.entity.User">
		update  user set password=#{password},salt=#{salt} where login_name=#{loginName}
	</update>
	<select id="forgetPw" parameterType="map" resultType="int">
		select count(*) from user where phone=#{name}
	</select>
	<update id="update" parameterType="com.aaa.entity.User">
		update user set password=#{password},salt=#{salt} where phone=#{phone}
	</update>
	<select id="getPower" parameterType="string" resultType="com.aaa.entity.Resource">
		select id,name,pid from permission
	</select>
	<select id="getPowerByUsername" parameterType="int" resultType="map">
		select p.id,p.pid from permission p where p.id in(select resource_id from role_per where role_id=#{asd})
	</select>
	<select id="power" resultType="map">
		select id,name from role
	</select>
	<insert id="submitPower" parameterType="map" >
		insert into role_per values (null,#{roleId},#{id})
	</insert>
	<delete id="deleteRole" parameterType="int">
		delete from role_per where role_id=#{asd}
	</delete>
</mapper>