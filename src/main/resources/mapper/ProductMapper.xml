<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aaa.dao.ProductMapper">
  <resultMap id="BaseResultMap" type="com.aaa.entity.Product">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 18 14:38:19 CST 2018.
    -->
    <result column="pid" jdbcType="INTEGER" property="pid" />
    <result column="make" jdbcType="VARCHAR" property="make" />
    <result column="line" jdbcType="VARCHAR" property="line" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="bodyForm" jdbcType="VARCHAR" property="bodyform" />
    <result column="engine" jdbcType="VARCHAR" property="engine" />
    <result column="transmission" jdbcType="VARCHAR" property="transmission" />
    <result column="bodyColor" jdbcType="VARCHAR" property="bodycolor" />
    <result column="InteriorColor" jdbcType="VARCHAR" property="interiorcolor" />
    <result column="cost" jdbcType="DECIMAL" property="cost" />
    <result column="sellingPrice" jdbcType="DECIMAL" property="sellingprice" />
    <result column="pImage" jdbcType="VARCHAR" property="pimage" />
    <result column="pStatus" jdbcType="VARCHAR" property="pstatus" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="pComment" jdbcType="VARCHAR" property="pcomment" />
    <result column="createPerson" jdbcType="VARCHAR" property="createperson" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 18 14:38:19 CST 2018.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 18 14:38:19 CST 2018.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 18 14:38:19 CST 2018.
    -->
    pid, make, line, type, bodyForm, engine, transmission, bodyColor, InteriorColor, 
    cost, sellingPrice, pImage, pStatus, createTime, pComment, createPerson
  </sql>
  <select id="selectByExample" parameterType="com.aaa.entity.ProductExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 18 14:38:19 CST 2018.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.aaa.entity.ProductExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 18 14:38:19 CST 2018.
    -->
    delete from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.aaa.entity.Product">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 18 14:38:19 CST 2018.
    -->
    insert into product (pid, make, line, 
      type, bodyForm, engine, 
      transmission, bodyColor, InteriorColor, 
      cost, sellingPrice, pImage, 
      pStatus, createTime, pComment, 
      createPerson)
    values (#{pid,jdbcType=INTEGER}, #{make,jdbcType=VARCHAR}, #{line,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{bodyform,jdbcType=VARCHAR}, #{engine,jdbcType=VARCHAR}, 
      #{transmission,jdbcType=VARCHAR}, #{bodycolor,jdbcType=VARCHAR}, #{interiorcolor,jdbcType=VARCHAR}, 
      #{cost,jdbcType=DECIMAL}, #{sellingprice,jdbcType=DECIMAL}, #{pimage,jdbcType=VARCHAR}, 
      #{pstatus,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, #{pcomment,jdbcType=VARCHAR}, 
      #{createperson,jdbcType=VARCHAR})
  </insert>
  <!-- 添加新产品 -->
  <insert id="addProduct" parameterType="product">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 18 14:38:19 CST 2018.
    -->
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pid != null">
        pid,
      </if>
      <if test="make != null">
        make,
      </if>
      <if test="line != null">
        line,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="bodyform != null">
        bodyForm,
      </if>
      <if test="engine != null">
        engine,
      </if>
      <if test="transmission != null">
        transmission,
      </if>
      <if test="bodycolor != null">
        bodyColor,
      </if>
      <if test="interiorcolor != null">
        InteriorColor,
      </if>
      <if test="cost != null">
        cost,
      </if>
      <if test="sellingprice != null">
        sellingPrice,
      </if>
      <if test="pimage != null">
        pImage,
      </if>
      <if test="pstatus != null">
        pStatus,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="pcomment != null">
        pComment,
      </if>
      <if test="createperson != null">
        createPerson,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="make != null">
        #{make,jdbcType=VARCHAR},
      </if>
      <if test="line != null">
        #{line,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="bodyform != null">
        #{bodyform,jdbcType=VARCHAR},
      </if>
      <if test="engine != null">
        #{engine,jdbcType=VARCHAR},
      </if>
      <if test="transmission != null">
        #{transmission,jdbcType=VARCHAR},
      </if>
      <if test="bodycolor != null">
        #{bodycolor,jdbcType=VARCHAR},
      </if>
      <if test="interiorcolor != null">
        #{interiorcolor,jdbcType=VARCHAR},
      </if>
      <if test="cost != null">
        #{cost,jdbcType=DECIMAL},
      </if>
      <if test="sellingprice != null">
        #{sellingprice,jdbcType=DECIMAL},
      </if>
      <if test="pimage != null">
        #{pimage,jdbcType=VARCHAR},
      </if>
      <if test="pstatus != null">
        #{pstatus,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="pcomment != null">
        #{pcomment,jdbcType=VARCHAR},
      </if>
      <if test="createperson != null">
        #{createperson,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <insert id="addProductMany" parameterType="map"  useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 18 14:38:19 CST 2018.
    -->
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="make != null">
        make,
      </if>
      <if test="line != null">
        line,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="bodyForm != null">
        bodyForm,
      </if>
      <if test="engine != null">
        engine,
      </if>
      <if test="transmission != null">
        transmission,
      </if>
      <if test="bodyColor != null">
        bodyColor,
      </if>
      <if test="interiorColor != null">
        InteriorColor,
      </if>
      <if test="cost != null">
        cost,
      </if>
      <if test="sellingPrice != null">
        sellingPrice,
      </if>
      <if test="pImage != null">
        pImage,
      </if>
      <if test="pStatus != null">
        pStatus,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="pComment != null">
        pComment,
      </if>
      <if test="createPerson != null">
        createPerson,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="make != null">
        #{make,jdbcType=VARCHAR},
      </if>
      <if test="line != null">
        #{line,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="bodyForm != null">
        #{bodyForm,jdbcType=VARCHAR},
      </if>
      <if test="engine != null">
        #{engine,jdbcType=VARCHAR},
      </if>
      <if test="transmission != null">
        #{transmission,jdbcType=VARCHAR},
      </if>
      <if test="bodyColor != null">
        #{bodyColor,jdbcType=VARCHAR},
      </if>
      <if test="interiorColor != null">
        #{interiorColor,jdbcType=VARCHAR},
      </if>
      <if test="cost != null">
        #{cost,jdbcType=DECIMAL},
      </if>
      <if test="sellingPrice != null">
        #{sellingPrice,jdbcType=DECIMAL},
      </if>
      <if test="pImage != null">
        #{pImage,jdbcType=VARCHAR},
      </if>
      <if test="pStatus != null">
        #{pStatus,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pComment != null">
        #{pComment,jdbcType=VARCHAR},
      </if>
      <if test="createPerson != null">
        #{createPerson,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.aaa.entity.ProductExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 18 14:38:19 CST 2018.
    -->
    select count(*) from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="getLoginInfo" parameterType="String" resultType="map">
        select u.id userId,u.name name,r.name rname ,r.id rId from user u
          INNER JOIN user_role ur on u.id=ur.user_id INNER JOIN
          role r on ur.role_id=r.id  where u.login_name=#{loginName}
    </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 18 14:38:19 CST 2018.
    -->
    update product
    <set>
      <if test="record.pid != null">
        pid = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.make != null">
        make = #{record.make,jdbcType=VARCHAR},
      </if>
      <if test="record.line != null">
        line = #{record.line,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.bodyform != null">
        bodyForm = #{record.bodyform,jdbcType=VARCHAR},
      </if>
      <if test="record.engine != null">
        engine = #{record.engine,jdbcType=VARCHAR},
      </if>
      <if test="record.transmission != null">
        transmission = #{record.transmission,jdbcType=VARCHAR},
      </if>
      <if test="record.bodycolor != null">
        bodyColor = #{record.bodycolor,jdbcType=VARCHAR},
      </if>
      <if test="record.interiorcolor != null">
        InteriorColor = #{record.interiorcolor,jdbcType=VARCHAR},
      </if>
      <if test="record.cost != null">
        cost = #{record.cost,jdbcType=DECIMAL},
      </if>
      <if test="record.sellingprice != null">
        sellingPrice = #{record.sellingprice,jdbcType=DECIMAL},
      </if>
      <if test="record.pimage != null">
        pImage = #{record.pimage,jdbcType=VARCHAR},
      </if>
      <if test="record.pstatus != null">
        pStatus = #{record.pstatus,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null">
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.pcomment != null">
        pComment = #{record.pcomment,jdbcType=VARCHAR},
      </if>
      <if test="record.createperson != null">
        createPerson = #{record.createperson,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Dec 18 14:38:19 CST 2018.
    -->
    update product
    set pid = #{record.pid,jdbcType=INTEGER},
      make = #{record.make,jdbcType=VARCHAR},
      line = #{record.line,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      bodyForm = #{record.bodyform,jdbcType=VARCHAR},
      engine = #{record.engine,jdbcType=VARCHAR},
      transmission = #{record.transmission,jdbcType=VARCHAR},
      bodyColor = #{record.bodycolor,jdbcType=VARCHAR},
      InteriorColor = #{record.interiorcolor,jdbcType=VARCHAR},
      cost = #{record.cost,jdbcType=DECIMAL},
      sellingPrice = #{record.sellingprice,jdbcType=DECIMAL},
      pImage = #{record.pimage,jdbcType=VARCHAR},
      pStatus = #{record.pstatus,jdbcType=VARCHAR},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      pComment = #{record.pcomment,jdbcType=VARCHAR},
      createPerson = #{record.createperson,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <!-- 查询所有产品信息 -->
  <select id="findAllByPage" parameterType="map" resultType="map">
    select *,IFNULL((allMessage.totalPrices-allMessage.totalCost),0) totalProfits from
    (select *,IFNULL((pro.sellingPrice*so.proCount),0) totalPrices,IFNULL((pro.cost*so.proCount),0) totalCost,IFNULL(so.proCount,0) pproCount,IFNULL(cc.cusCount,0) ccusCount from product  pro left join
    (select pid ppid,count(pid) proCount from sorder group by pid) so on pro.pid=so.ppid LEFT JOIN
    (select productId,count(productId) cusCount from customer where isDel=0 group by productId) cc on pro.pid=cc.productId ) allMessage
    where live=1
    <if test="make !=null and make !=''">
         and allMessage.make=#{make}
        </if>
        <if test="line!=null and line!=''">
          and allMessage.line=#{line}
        </if>
        <if test="type!=null and type!=''">
          and allMessage.type=#{type}
        </if>
        <if test="pstatus!=null and pstatus!=''">
          and allMessage.pStatus=#{pstatus}
        </if>
        <if test="beginTime!=null and beginTime!=''">
          and allMessage.createTime &gt;= #{beginTime}
        </if>
        <if test="endTime!=null and endTime!=''">
          and allMessage.createTime &lt;= #{endtime}
        </if>
        order by allMessage.createTime desc
    </select>
  <!-- 查询所有产品 -->
  <select id="productCount" parameterType="map" resultType="map">
    <if test="queryStyle==null ">
      select *,IFNULL((allMessage.totalPrices-allMessage.totalCost),0) totalProfits from
      (select *,IFNULL((pro.sellingPrice*so.proCount),0) totalPrices,IFNULL((pro.cost*so.proCount),0) totalCost,IFNULL(so.proCount,0) pproCount,IFNULL(cc.cusCount,0) ccusCount from product  pro left join
      (select pid ppid,count(pid) proCount from sorder group by pid) so on pro.pid=so.ppid LEFT JOIN
      (select productId,count(productId) cusCount from customer where isDel=0 group by productId) cc on pro.pid=cc.productId ) allMessage
      where live=1
    </if>
    <if test="queryStyle=='year'">
      select *,IFNULL((allMessage.totalPrices-allMessage.totalCost),0) totalProfits from
      (select *,IFNULL((pro.sellingPrice*so.proCount),0) totalPrices,IFNULL((pro.cost*so.proCount),0) totalCost,IFNULL(so.proCount,0) pproCount,IFNULL(cc.cusCount,0) ccusCount from product  pro left join
      (select pid ppid,count(pid) proCount from sorder group by pid) so on pro.pid=so.ppid LEFT JOIN
      (select productId,count(productId) cusCount from customer where isDel=0 group by productId) cc on pro.pid=cc.productId ) allMessage
      where live=1 and DATE_FORMAT(createtime,'%Y')&gt;=DATE_FORMAT(#{beginTime},'%Y')
      and DATE_FORMAT(createtime,'%Y')&lt;=DATE_FORMAT(#{endTime},'%Y')
    </if>
    <if test="queryStyle=='month'">
      select *,IFNULL((allMessage.totalPrices-allMessage.totalCost),0) totalProfits from
      (select *,IFNULL((pro.sellingPrice*so.proCount),0) totalPrices,IFNULL((pro.cost*so.proCount),0) totalCost,IFNULL(so.proCount,0) pproCount,IFNULL(cc.cusCount,0) ccusCount from product  pro left join
      (select pid ppid,count(pid) proCount from sorder group by pid) so on pro.pid=so.ppid LEFT JOIN
      (select productId,count(productId) cusCount from customer where isDel=0 group by productId) cc on pro.pid=cc.productId ) allMessage
      where live=1  where live=1 and DATE_FORMAT(createtime,'%Y-%m')&gt;=DATE_FORMAT(#{beginTime},'%Y-%m')
      and DATE_FORMAT(createtime,'%Y-%m')&lt;=DATE_FORMAT(#{endTime},'%Y-%m')
    </if>
    <if test="queryStyle=='week'">
      select *,IFNULL((allMessage.totalPrices-allMessage.totalCost),0) totalProfits from
      (select *,IFNULL((pro.sellingPrice*so.proCount),0) totalPrices,IFNULL((pro.cost*so.proCount),0) totalCost,IFNULL(so.proCount,0) pproCount,IFNULL(cc.cusCount,0) ccusCount from product  pro left join
      (select pid ppid,count(pid) proCount from sorder group by pid) so on pro.pid=so.ppid LEFT JOIN
      (select productId,count(productId) cusCount from customer where isDel=0 group by productId) cc on pro.pid=cc.productId ) allMessage
      where live=1  where live=1 and DATE_FORMAT(createtime,'%Y年-%u周')&gt;=DATE_FORMAT(#{beginTime},'%Y年-%u周')
      and DATE_FORMAT(createtime,'%Y年-%u周')&lt;=DATE_FORMAT(#{endTime},'%Y年-%u周')
    </if>
    <if test="queryStyle=='day'">
      select *,IFNULL((allMessage.totalPrices-allMessage.totalCost),0) totalProfits from
      (select *,IFNULL((pro.sellingPrice*so.proCount),0) totalPrices,IFNULL((pro.cost*so.proCount),0) totalCost,IFNULL(so.proCount,0) pproCount,IFNULL(cc.cusCount,0) ccusCount from product  pro left join
      (select pid ppid,count(pid) proCount from sorder group by pid) so on pro.pid=so.ppid LEFT JOIN
      (select productId,count(productId) cusCount from customer where isDel=0 group by productId) cc on pro.pid=cc.productId ) allMessage
      where live=1  where live=1 and DATE_FORMAT(createtime,'%Y-%m-%d')&gt;=DATE_FORMAT(#{beginTime},'%Y-%m-%d')
      and DATE_FORMAT(createtime,'%Y-%m-%d')&lt;=DATE_FORMAT(#{endTime},'%Y-%m-%d')
    </if>
  </select>
  <!-- 查询产品数量 -->
  <select id="getTotal" parameterType="map" resultType="Integer">
        select count(*) totalrow from product where live=1
    <if test="make !=null and make !=''">
      and make=#{make}
    </if>
    <if test="line!=null and line!=''">
      and line=#{line}
    </if>
    <if test="type!=null and type!=''">
      and type=#{type}
    </if>
    <if test="pstatus!=null and pstatus!=''">
      and pstatus=#{pstatus}
    </if>
    <if test="beginTime!=null and beginTime!=''">
      and createtime &gt;= #{beginTime}
    </if>
    <if test="endTime!=null and endTime!=''">
      and createtime &lt;= #{endtime}
    </if>
    </select>
  <!-- 查询所有品牌 -->
  <select id="findMake" resultMap="BaseResultMap">
        select distinct make from product order by make asc
  </select>
  <!-- 查询所有车系 -->
  <select id="findLine" parameterType="product" resultMap="BaseResultMap">
      select distinct line from product
       <where>
         <if test="make!=null and make!=''">
           make =#{make}
         </if>
       </where>
      order by line asc;
  </select>
  <!-- 查询所有车型 -->
  <select id="findType" parameterType="product" resultMap="BaseResultMap">
      select distinct type from product
      <where>
        <if test="make!=null and make!=''">
          make =#{make}
        </if>
        <if test="line!=null and line!=''">
          and line = #{line}
        </if>
      </where>
    order by type asc;
  </select>
  <!-- 查询所有车身 -->
  <select id="findBody" resultMap="BaseResultMap">
      select distinct bodyform from product order by bodyform asc;
  </select>
  <!-- 查询对应车身,变速箱，发动机 -->
  <select id="findCheckBody" resultMap="BaseResultMap">
      select distinct bodyform,engine,transmission from product where type =#{type}
  </select>
  <!-- 查询所有发动机 -->
  <select id="findEngine" resultMap="BaseResultMap">
      select distinct engine from product order by engine asc;
  </select>
  <!-- 查询所有变速箱 -->
  <select id="findTransmission" resultMap="BaseResultMap">
      select distinct transmission from product order by transmission asc;
  </select>
  <!-- 查询所有外观颜色 -->
  <select id="findBodyColor" resultMap="BaseResultMap">
      select distinct bodycolor from product order by bodycolor asc;
  </select>
  <!-- 查询所有内饰颜色 -->
  <select id="findInteriorColor" resultMap="BaseResultMap">
      select distinct interiorcolor from product order by interiorcolor asc;
  </select>
  <!-- 查询所有产品状态 -->
  <select id="findPstatus" resultMap="BaseResultMap">
      select distinct pstatus from product order  by pstatus asc;
  </select>
  <!-- 查询某一产品状态 -->
  <select id="findPstatusTwo" parameterType="product" resultMap="BaseResultMap">
      select distinct pstatus from product where live=1
      <if test="make!=null and make !=''">
         and make=#{make}
      </if>
      <if test="line!=null and line !=''">
        and line=#{line}
      </if>
      <if test="type!=null and type!=''">
        and type=#{type}
      </if>
      order  by pstatus asc;
  </select>
  <!-- 修改产品 -->
  <update id="updateProduct" parameterType="map">
      update product set
      make = #{make,jdbcType=VARCHAR},
      line = #{line,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      bodyForm = #{bodyForm,jdbcType=VARCHAR},
      engine = #{engine,jdbcType=VARCHAR},
      transmission = #{transmission,jdbcType=VARCHAR},
      bodyColor = #{bodyColor,jdbcType=VARCHAR},
      InteriorColor = #{InteriorColor,jdbcType=VARCHAR},
      cost = #{cost,jdbcType=DECIMAL},
      sellingPrice = #{sellingPrice,jdbcType=DECIMAL},
      pImage = #{pImage,jdbcType=VARCHAR},
      pStatus = #{pStatus,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      pComment = #{pComment,jdbcType=VARCHAR},
      createPerson = #{createPerson,jdbcType=VARCHAR}
      where pid = #{pid}
  </update>
  <!-- 删除产品 -->
  <update id="delProduct" parameterType="Integer">
    update product set
    live = 0
    where pid =#{pid}
  </update>
  <!-- 查询产品是否存在 -->
  <select id="isExist" parameterType="map" resultType="map">
        select count(*) count from product where type=#{type} and bodyColor=#{bodyColor} and interiorColor=#{interiorColor}
    </select>
  <!-- 添加产品录入人 -->
  <insert id="addProductToUser" parameterType="map">
       insert into product (userId,customerId,isShare) values (#{empid},#{customerid},0)
  </insert>
</mapper>