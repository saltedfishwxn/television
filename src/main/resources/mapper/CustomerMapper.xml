<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aaa.dao.CustomerMapper">
  <resultMap id="BaseResultMap" type="com.aaa.entity.Customer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Dec 15 14:44:31 CST 2018.
    -->
    <result column="customerId" jdbcType="INTEGER" property="customerid" />
    <result column="customerName" jdbcType="VARCHAR" property="customername" />
    <result column="firstTel" jdbcType="VARCHAR" property="firsttel" />
    <result column="secondTel" jdbcType="VARCHAR" property="secondtel" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="idType" jdbcType="VARCHAR" property="idtype" />
    <result column="idCard" jdbcType="VARCHAR" property="idcard" />
    <result column="areaCode" jdbcType="VARCHAR" property="areacode" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="marriage" jdbcType="VARCHAR" property="marriage" />
    <result column="job" jdbcType="VARCHAR" property="job" />
    <result column="contact" jdbcType="VARCHAR" property="contact" />
    <result column="contactTel" jdbcType="VARCHAR" property="contacttel" />
    <result column="productId" jdbcType="INTEGER" property="productid" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="customerSource" jdbcType="VARCHAR" property="customersource" />
    <result column="customerLevel" jdbcType="VARCHAR" property="customerlevel" />
    <result column="fid" jdbcType="INTEGER" property="fid" />
    <result column="userId" jdbcType="INTEGER" property="userId" />
    <result column="maintainRecordId" jdbcType="INTEGER" property="maintainrecordid" />
    <result column="isDel" jdbcType="INTEGER" property="isdel" />
    <result column="comment" jdbcType="VARCHAR" property="comment" />
  </resultMap>
  <insert id="insert" parameterType="com.aaa.entity.Customer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Dec 15 14:44:31 CST 2018.
    -->
    insert into customer (customerId,isPublic customerName, firstTel,
      secondTel, sex, idType, 
      idCard, areaCode, address, 
      marriage, job, contact, 
      contactTel, productId, createTime, 
      customerSource, customerLevel, fid, 
      empId, maintainRecordId, isDel, 
      comment)
    values (#{customerid,jdbcType=INTEGER},#{ispublic,jdbcType=INTEGER}, #{customername,jdbcType=VARCHAR}, #{firsttel,jdbcType=VARCHAR},
      #{secondtel,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{idtype,jdbcType=VARCHAR}, 
      #{idcard,jdbcType=VARCHAR}, #{areacode,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{marriage,jdbcType=VARCHAR}, #{job,jdbcType=VARCHAR}, #{contact,jdbcType=VARCHAR}, 
      #{contacttel,jdbcType=VARCHAR}, #{productid,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}, 
      #{customersource,jdbcType=VARCHAR}, #{customerlevel,jdbcType=VARCHAR}, #{fid,jdbcType=INTEGER}, 
      #{empid,jdbcType=INTEGER}, #{maintainrecordid,jdbcType=INTEGER}, #{isdel,jdbcType=INTEGER}, 
      #{comment,jdbcType=VARCHAR})
  </insert>
  <insert id="addCustomer" useGeneratedKeys="true" keyProperty="customerid" parameterType="com.aaa.entity.Customer">
    insert into customer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="customerid != null">
        customerId,
      </if>
      <if test="isPublic != null">
          isPublic,
      </if>
      <if test="customername != null">
        customerName,
      </if>
      <if test="firsttel != null">
        firstTel,
      </if>
      <if test="secondtel != null">
        secondTel,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="idtype != null">
        idType,
      </if>
      <if test="idcard != null">
        idCard,
      </if>
      <if test="areacode != null">
        areaCode,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="marriage != null">
        marriage,
      </if>
      <if test="job != null">
        job,
      </if>
      <if test="contact != null">
        contact,
      </if>
      <if test="contacttel != null">
        contactTel,
      </if>
      <if test="productid != null">
        productId,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="customersource != null">
        customerSource,
      </if>
      <if test="customerlevel != null">
        customerLevel,
      </if>
      <if test="fid != null">
        fid,
      </if>
      <if test="maintainrecordid != null">
        maintainRecordId,
      </if>
      <if test="isdel != null">
        isDel,
      </if>
      <if test="comment != null">
        comment,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="customerid != null">
        #{customerid,jdbcType=INTEGER},
      </if>
      <if test="isPublic != null">
        #{isPublic,jdbcType=INTEGER},
      </if>
      <if test="customername != null">
        #{customername,jdbcType=VARCHAR},
      </if>
      <if test="firsttel != null">
        #{firsttel,jdbcType=VARCHAR},
      </if>
      <if test="secondtel != null">
        #{secondtel,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="idtype != null">
        #{idtype,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="areacode != null">
        #{areacode,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="marriage != null">
        #{marriage,jdbcType=VARCHAR},
      </if>
      <if test="job != null">
        #{job,jdbcType=VARCHAR},
      </if>
      <if test="contact != null">
        #{contact,jdbcType=VARCHAR},
      </if>
      <if test="contacttel != null">
        #{contacttel,jdbcType=VARCHAR},
      </if>
      <if test="productid != null">
        #{productid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="customersource != null">
        #{customersource,jdbcType=VARCHAR},
      </if>
      <if test="customerlevel != null">
        #{customerlevel,jdbcType=VARCHAR},
      </if>
      <if test="fid != null">
        #{fid,jdbcType=INTEGER},
      </if>
      <if test="maintainrecordid != null">
        #{maintainrecordid,jdbcType=INTEGER},
      </if>
      <if test="isdel != null">
        #{isdel,jdbcType=INTEGER},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <insert id="addCustomerToUser" parameterType="map">
       insert into user_customer (userId,customerId,isShare) values (#{empid},#{customerid},0)
  </insert>
  <!--<select id="listCustomer" parameterType="map" resultType="com.aaa.entity.Customer">-->
      <!--select c.*,u.name name from-->
     <!--(select c.* ,p.make make,p.line line,p.type type ,p.bodyColor bodyColor,p.InteriorColor InteriorColor  from customer c LEFT JOIN product p on c.productId=p.pid)-->
      <!--c inner join user_customer u_c ON c.customerId=u_c.customerId-->
      <!--INNER JOIN user u on u_c.userId=u.id where isDel=0   and isPublic = #{isPublic}-->
      <!--<if test="customerName!=null and customerName !=''">-->
        <!--and customerName like '%${customerName}%'-->
      <!--</if>-->
      <!--<if test="beginTime!=null and beginTime !=''">-->
      <!--and createTime &gt;= #{beginTime}-->
      <!--</if>-->
      <!--<if test="endTime!=null and endTime !=''">-->
        <!--and createTime &lt;= #{endTime}-->
      <!--</if>-->
    <!--<if test="prop!=null and prop!=''">-->
      <!--order by ${prop}-->
    <!--</if>-->
    <!--<if test="orderd!=null and orderd!=''">-->
      <!--${orderd}-->
    <!--</if>-->
  <!--</select>-->
  <select id="listCustomer" parameterType="map" resultType="map">
      select c.*,u.id userId,u.name name from
     (select c.* ,p.make make,p.line line,p.type type ,p.bodyColor bodyColor,p.InteriorColor InteriorColor  from customer c LEFT JOIN product p on c.productId=p.pid)
      c left join user_customer u_c ON c.customerId=u_c.customerId
      left JOIN user u on u_c.userId=u.id where isDel=0   and isPublic = #{isPublic}
      <if test="userId!=null and userId !=''and rId==1 and isPublic==0">
        and userId =#{userId}
      </if>
      <if test="customerName!=null and customerName !=''">
        and customerName like '%${customerName}%'
      </if>
      <if test="beginTime!=null and beginTime !=''">
      and createTime &gt;= #{beginTime}
      </if>
      <if test="endTime!=null and endTime !=''">
        and createTime &lt;= #{endTime}
      </if>
    <if test="prop!=null and prop!=''">
      order by ${prop}
    </if>
    <if test="orderd!=null and orderd!=''">
      ${orderd}
    </if>
  </select>

  <select id="countCustomer" parameterType="map" resultType="integer">
      select count(*)  from
      (select c.* ,p.make make,p.line line,p.type type ,p.bodyColor bodyColor,p.InteriorColor InteriorColor  from customer c LEFT JOIN product p on c.productId=p.pid)
      c left join user_customer u_c ON c.customerId=u_c.customerId
      left JOIN user u on u_c.userId=u.id where isDel=0   and isPublic = #{isPublic}
      <if test="userId!=null and userId !=''and rId==1 and isPublic==0">
          and userId =#{userId}
      </if>
      <if test="customerName!=null and customerName !=''">
          and customerName like '%${customerName}%'
      </if>
      <if test="beginTime!=null and beginTime !=''">
          and createTime &gt;= #{beginTime}
      </if>
      <if test="endTime!=null and endTime !=''">
          and createTime &lt;= #{endTime}
      </if>
      <if test="prop!=null and prop!=''">
          order by ${prop}
      </if>
      <if test="orderd!=null and orderd!=''">
          ${orderd}
      </if>
  </select>
  <select id="getCustomer" parameterType="map" resultType="map">
      select c.* ,u.id userId,u.name name from
      (select c.* ,p.make make,p.line line,p.type type ,p.bodyColor bodyColor,p.InteriorColor InteriorColor from customer c LEFT JOIN product p on c.productId=p.pid) c
      left join user_customer u_c ON c.customerId=u_c.customerId left JOIN user u on u_c.userId=u.id where isDel=0 and c.customerId=#{customerId}
         <if test="userName!=null and userName!=''">
             and name=#{userName}
         </if>
  </select>
  <!--<update id="delCustomer" parameterType="map">-->
    <!--update customer set isDel=1 where customerId=#{customerId}-->
     <!--<if test="name!=null and name!=''">-->
         <!--and name=#{userName}-->
     <!--</if>-->
  <!--</update>-->
    <!--删除一条员工对应客户的记录-->
    <delete id="delCustomer" parameterType="map">
        delete from user_customer where userId=#{userId} and customerId=#{customerId}
    </delete>
  <update id="updateCustomer" parameterType="com.aaa.entity.Customer">
      update customer
      <set>
          <if test="customername != null">
              customerName = #{customername,jdbcType=VARCHAR},
          </if>
          <if test="firsttel != null">
              firstTel = #{firsttel,jdbcType=VARCHAR},
          </if>
          <if test="secondtel != null">
              secondTel = #{secondtel,jdbcType=VARCHAR},
          </if>
          <if test="sex != null">
              sex = #{sex,jdbcType=VARCHAR},
          </if>
          <if test="idtype != null">
              idType = #{idtype,jdbcType=VARCHAR},
          </if>
          <if test="idcard != null">
              idCard = #{idcard,jdbcType=VARCHAR},
          </if>
          <if test="areacode != null">
              areaCode = #{areacode,jdbcType=VARCHAR},
          </if>
          <if test="address != null">
              address = #{address,jdbcType=VARCHAR},
          </if>
          <if test="marriage != null">
              marriage = #{marriage,jdbcType=VARCHAR},
          </if>
          <if test="job != null">
              job = #{job,jdbcType=VARCHAR},
          </if>
          <if test="contact != null">
              contact = #{contact,jdbcType=VARCHAR},
          </if>
          <if test="contacttel != null">
              contactTel = #{contacttel,jdbcType=VARCHAR},
          </if>
          <if test="productid != null">
              productId = #{productid,jdbcType=INTEGER},
          </if>
          <if test="createtime != null">
              createTime = #{createtime,jdbcType=TIMESTAMP},
          </if>
          <if test="customersource != null">
              customerSource = #{customersource,jdbcType=VARCHAR},
          </if>
          <if test="customerlevel != null">
              customerLevel = #{customerlevel,jdbcType=VARCHAR},
          </if>
          <if test="fid != null">
              fid = #{fid,jdbcType=INTEGER},
          </if>
          <if test="maintainrecordid != null">
              maintainRecordId = #{maintainrecordid,jdbcType=INTEGER},
          </if>
          <if test="isdel != null">
              isDel = #{isdel,jdbcType=INTEGER},
          </if>
          <if test="comment != null">
              comment = #{comment,jdbcType=VARCHAR},
          </if>
      </set>
        where customerId=#{customerid}
    </update>
    <insert id="addCustomers" parameterType="map"  useGeneratedKeys="true" keyProperty="customerId" keyColumn="customerId">
        insert into customer
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="customerid != null">
                customerId,
            </if>
            <if test="isPublic != null">
              isPublic,
            </if>
            <if test="customername != null">
                customerName,
            </if>
            <if test="firsttel != null">
                firstTel,
            </if>
            <if test="secondtel != null">
                secondTel,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="idtype != null">
                idType,
            </if>
            <if test="idcard != null">
                idCard,
            </if>
            <if test="areacode != null">
                areaCode,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="marriage != null">
                marriage,
            </if>
            <if test="job != null">
                job,
            </if>
            <if test="contact != null">
                contact,
            </if>
            <if test="contacttel != null">
                contactTel,
            </if>
            <if test="productid != null">
                productId,
            </if>
            <if test="createtime != null">
                createTime,
            </if>
            <if test="customersource != null">
                customerSource,
            </if>
            <if test="customerlevel != null">
                customerLevel,
            </if>
            <if test="fid != null">
                fid,
            </if>
            <if test="maintainrecordid != null">
                maintainRecordId,
            </if>
            <if test="isdel != null">
                isDel,
            </if>
            <if test="comment != null">
                comment,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="customerid != null">
                #{customerid,jdbcType=INTEGER},
            </if>
            <if test="isPublic != null">
                #{isPublic,jdbcType=INTEGER},
            </if>
            <if test="customername != null">
                #{customername,jdbcType=VARCHAR},
            </if>
            <if test="firsttel != null">
                #{firsttel,jdbcType=VARCHAR},
            </if>
            <if test="secondtel != null">
                #{secondtel,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=VARCHAR},
            </if>
            <if test="idtype != null">
                #{idtype,jdbcType=VARCHAR},
            </if>
            <if test="idcard != null">
                #{idcard,jdbcType=VARCHAR},
            </if>
            <if test="areacode != null">
                #{areacode,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="marriage != null">
                #{marriage,jdbcType=VARCHAR},
            </if>
            <if test="job != null">
                #{job,jdbcType=VARCHAR},
            </if>
            <if test="contact != null">
                #{contact,jdbcType=VARCHAR},
            </if>
            <if test="contacttel != null">
                #{contacttel,jdbcType=VARCHAR},
            </if>
            <if test="productid != null">
                #{productid,jdbcType=INTEGER},
            </if>
            <if test="createtime != null">
                #{createtime,jdbcType=TIMESTAMP},
            </if>
            <if test="customersource != null">
                #{customersource,jdbcType=VARCHAR},
            </if>
            <if test="customerlevel != null">
                #{customerlevel,jdbcType=VARCHAR},
            </if>
            <if test="fid != null">
                #{fid,jdbcType=INTEGER},
            </if>
            <if test="maintainrecordid != null">
                #{maintainrecordid,jdbcType=INTEGER},
            </if>
            <if test="isdel != null">
                #{isdel,jdbcType=INTEGER},
            </if>
            <if test="comment != null">
                #{comment,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="customerResourceCount" parameterType="map" resultType="map">
        SELECT customer.customerSource name,count(*) count from customer
            <if test="queryStyle=='year'">
               where DATE_FORMAT(createtime,'%Y') &gt;= DATE_FORMAT(#{beginTime},'%Y') and DATE_FORMAT(createtime,'%Y') &lt;=DATE_FORMAT(#{endTime},'%Y')
            </if>
            <if test="queryStyle=='month'">
               where DATE_FORMAT(createtime,'%Y-%m') &gt;=DATE_FORMAT(#{beginTime},'%Y-%m')  and DATE_FORMAT(createtime,'%Y-%m') &lt;= DATE_FORMAT(#{endTime},'%Y-%m')
            </if>
            <if test="queryStyle=='week'">
               where DATE_FORMAT(createtime,'%Y年-%u周') &gt;=DATE_FORMAT(#{beginTime},'%Y年-%u周') and DATE_FORMAT(createtime,'%Y年-%u周') &lt;= DATE_FORMAT(#{endTime},'%Y年-%u周')
            </if>
            <if test="queryStyle=='day'">
               where createTime &gt;= #{beginTime} and createTime &lt;= #{endTime}
            </if>
        GROUP BY customerSource
    </select>
    <select id="customerCount" parameterType="map" resultType="map">
        <if test="queryStyle==null ">
            select DATE_FORMAT(createtime,'%Y') name,count(customerId) count from customer
            group by DATE_FORMAT(createtime,'%Y')
        </if>
        <if test="queryStyle=='year'">
            select DATE_FORMAT(createtime,'%Y') name,count(customerId) count from customer
            where DATE_FORMAT(createtime,'%Y')&gt;=DATE_FORMAT(#{beginTime},'%Y')
            and DATE_FORMAT(createtime,'%Y')&lt;=DATE_FORMAT(#{endTime},'%Y')
            group by DATE_FORMAT(createtime,'%Y')
        </if>
        <if test="queryStyle=='month'">
            select DATE_FORMAT(createtime,'%Y-%m') name,count(customerId) count from customer
            where DATE_FORMAT(createtime,'%Y-%m')&gt;=DATE_FORMAT(#{beginTime},'%Y-%m')
            and DATE_FORMAT(createtime,'%Y-%m')&lt;=DATE_FORMAT(#{endTime},'%Y-%m')
            group by DATE_FORMAT(createtime,'%Y-%m')
        </if>
        <if test="queryStyle=='week'">
            select DATE_FORMAT(createtime,'%Y年-%u周') name,count(customerId) count from customer
            where DATE_FORMAT(createtime,'%Y年-%u周')&gt;=DATE_FORMAT(#{beginTime},'%Y年-%u周')
            and DATE_FORMAT(createtime,'%Y年-%u周')&lt;=DATE_FORMAT(#{endTime},'%Y年-%u周')
            group by DATE_FORMAT(createtime,'%Y年-%u周')
        </if>
        <if test="queryStyle=='day'">
            select DATE_FORMAT(createtime,'%Y-%m-%d') name,count(customerId) count from customer
            where DATE_FORMAT(createtime,'%Y-%m-%d')&gt;=DATE_FORMAT(#{beginTime},'%Y-%m-%d')
            and DATE_FORMAT(createtime,'%Y-%m-%d')&lt;=DATE_FORMAT(#{endTime},'%Y-%m-%d')
            group by DATE_FORMAT(createtime,'%Y-%m-%d')
        </if>
    </select>
    <select id="listProducts" resultType="map">
        select * from product where live=1
    </select>
    <select id="getLoginInfo" parameterType="String" resultType="map">
        select u.id userId,u.name name,r.name rname ,r.id rId from user u
          INNER JOIN user_role ur on u.id=ur.user_id INNER JOIN
          role r on ur.role_id=r.id  where u.login_name=#{loginName}
    </select>
    <insert id="selCustomer" parameterType="map">
        insert into user_customer (userId,customerId) values (#{userId},#{customerId})
    </insert>
    <update id="changePublic" parameterType="string">
        update customer set isPublic=0 where customerId=#{customerId}
    </update>
    <select id="isSel" parameterType="string" resultType="map">
        select isPublic from customer where customerId=#{customerId}
    </select>
    <select id="isExist" parameterType="string" resultType="map">
        select count(*) count from customer where firstTel=#{firstTel}
    </select>
    <insert id="insertNewFollowInfo" parameterType="map">
        insert into followinfo (customerId,isDone,nextFollowTime)
        values(#{customerId},#{isDone},#{nextFollowTime});
    </insert>
</mapper>