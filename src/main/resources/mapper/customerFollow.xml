<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aaa.dao.CustomerFollowDao">
    <sql id="selectStatement">
        customerId,customerName,firstTel,p.type,c.customerLevel,f.followTime,nextFollowTime,f.isDone,u.name,f.followId
    </sql>
    <update id="changeIsDoneStatus" parameterType="int">
        update followinfo set isDone = 0 where followId = #{id}
    </update>
    <update id="updateCustomerLevel" parameterType="map">
        update customer set customerLevel = #{nowLevel} where customerId=#{customerId}
    </update>
    <update id="updateFollowInfo" parameterType="followInfo">
        update followinfo
        set followTime=#{nowDate}, result=#{talking},
            communication=#{communication}, isDone=#{followStatus},
            customerLevel=#{nowLevel}
        where followId=#{followId}
    </update>
    <delete id="cancelShareCustomer">
        delete from user_customer
        where customerId = #{xxx}
        and isShare != 0
    </delete>
    <select id="listNotVisited" resultType="map">
        select <include refid="selectStatement"></include>
        from customer c,product p,followInfo f,user u,user_customer uc
        where f.customerId = c.customerId
          and c.productId =p.pid
          and u.id = uc.userId
          and c.customerId = uc.customerId
          and f.isDone=1
          and nextFollowTime &lt;= curdate()
    </select>

    <select id="getFollowInfoByCustomerId" parameterType="integer" resultType="map">
        select * ,u.id uid from customer c,product p,followInfo f,user u,user_customer uc
        where f.customerId = c.customerId
          and c.productId =p.pid
          and u.id = uc.userId
          and c.customerId = uc.customerId
          and c.customerId = #{cid}
          and f.isDone = 1
          and uc.isShare in (0,1)
          and u.id = #{uid}
    </select>
    <select id="listFollowQuery" parameterType="com.aaa.query.FollowQuery" resultType="map">
        select * from customer c,product p,followInfo f,user u,user_customer uc
        where f.customerId = c.customerId
          and c.productId =p.pid
          and u.id = uc.userId
          and c.customerId = uc.customerId

          and nextFollowTime &lt;= curdate()
          <if test="customerLevel != null and customerLevel != ''">
              and c.customerLevel = #{customerLevel}
          </if>
          <if test="customerName != null and customerName != ''">
              and c.customerName = #{customerName}
          </if>
          <if test="customerTel != null and customerTel != ''">
              and c.firstTel = #{customerTel}
          </if>
          <if test="empName != null and empName != ''">
              and uc.userId = #{empName}
          </if>
          <if test="followStatus != null and followStatus != ''">
              and f.isDone = #{followStatus}
          </if>
          <if test="followStatus == null or followStatus == ''">
              and f.isDone = 1
          </if>
        <if test="userId != null and userId != ''">
            and u.id = #{userId}
        </if>
        order by f.nextFollowTime desc
    </select>
    <select id="getTotalQuery" parameterType="com.aaa.query.FollowQuery" resultType="int">
        select count(*) from customer c,product p,followInfo f,user u,user_customer uc
        where f.customerId = c.customerId
        and c.productId =p.pid
        and u.id = uc.userId
        and c.customerId = uc.customerId

        and nextFollowTime &lt;= curdate()
        <if test="customerLevel != null and customerLevel != ''">
            and c.customerLevel = #{customerLevel}
        </if>
        <if test="customerName != null and customerName != ''">
            and c.customerName = #{customerName}
        </if>
        <if test="customerTel != null and customerTel != ''">
            and c.firstTel = #{customerTel}
        </if>
        <if test="empName != null and empName != ''">
            and u.id = #{empName}
        </if>
        <if test="followStatus != null and followStatus != ''">
            and f.isDone = #{followStatus}
        </if>
        <if test="followStatus == null or followStatus == ''">
            and f.isDone = 1
        </if>
        <if test="userId != null and userId != ''">
            and u.id = #{userId}
        </if>
    </select>
    <insert id="insertFollowInfo" parameterType="followInfo" useGeneratedKeys="true" keyProperty="followId" >
        insert into followinfo (customerId,isDone,nextFollowTime)
        values(#{customerId},#{followStatus},#{nextDate});
    </insert>
    <select id="getFollowHistory" parameterType="int" resultType="map">
          select * from customer c,product p,followInfo f,user u,user_customer uc,isdone i
          where c.customerId=f.customerId
            and c.productId =p.pid
            and u.id = uc.userId
            and i.id = f.isDone
            and c.customerId = uc.customerId
            and c.customerId = #{sss}
            and f.isDone = 0
    </select>
    <select id="findUsers" parameterType="int" resultType="map" >
        select u.id value,u.name label from user u,role r,user_role ur where u.id = ur.user_id and r.id = ur.role_id
                                                                             and r.id=1 and u.id != #{xxx};
    </select>
    <select id="getFollowIdByCustomerId" resultType="java.lang.Integer" parameterType="java.lang.Integer">
        select followId from followinfo where customerId=#{customerId} and isDone=#{i}
    </select>
    <insert id="insertShareCustomer" parameterType="map" useGeneratedKeys="true" keyProperty="id">
        insert into user_customer (userId,customerId,isShare) values(#{shareId}, #{cusId},1 );
    </insert>
    <insert id="insertNewFollowInfo" parameterType="map">
        insert into followinfo (customerId,isDone,nextFollowTime)
        values(#{customerId},#{isDone},#{nowDate});
    </insert>

    <select id="checkEmpRoleName" parameterType="string" resultType="map">
        select distinct r.name,ur.role_id,u.id from role r,user_role ur,user u where r.id = ur.role_id and ur.user_id = u.id and u.login_name = #{shiroUserName};
    </select>
    <select id="getCountNeedFollowSelf" resultType="java.lang.Integer" parameterType="int">
        select count(*) from customer c,product p,followInfo f,user u,user_customer uc
        where f.customerId = c.customerId
          and c.productId =p.pid
          and u.id = uc.userId
          and c.customerId = uc.customerId
          and nextFollowTime &lt;= curdate()
          and f.isDone = 1
          and uc.userId = #{id}

    </select>
    <select id="getCountNeedFollowAll" resultType="java.lang.Integer">
        select count(*) from customer c,product p,followInfo f,user u,user_customer uc
        where f.customerId = c.customerId
          and c.productId =p.pid
          and u.id = uc.userId
          and c.customerId = uc.customerId
          and nextFollowTime &lt;= curdate()
          and f.isDone = 1
    </select>
    <select id="listShareCustomer"  parameterType="int" resultType="map">
        select * from (select uc.* from  user_customer uc
          inner JOIN
          (select * from (select *,count(*) count from user_customer GROUP BY customerId) tt where tt.count>1 ) cc
          on cc.customerId=uc.customerId where uc.userId = #{aaa}
        order by customerId) find ,customer c,product p where c.productId = p.pid and find.customerId = c.customerId;

    </select>
    <select id="listShareCustomerNone" resultType="java.util.Map">
        select * from (select uc.* from  user_customer uc
               inner JOIN
               (select * from (select *,count(*) count from user_customer GROUP BY customerId) tt where tt.count>1 ) cc
               on cc.customerId=uc.customerId
               order by customerId) find ,customer c,product p where c.productId = p.pid and find.customerId = c.customerId;

    </select>
    <select id="listCustomerCountByLevel" resultType="java.util.Map" parameterType="int">
        select IFNULL(aa.num,0) value,bb.customerLevel name from
            (select count(*) num,customerLevel
             from customer c inner join user_customer uc
                                        on c.customerId = uc.customerId
                                <if test="rid == 1">
                                    and uc.userId = #{uid}
                                </if>

                                            and uc.isShare = 0
             group by c.customerLevel) aa RIGHT JOIN (select DISTINCT customerLevel from customer) bb on aa.customerLevel = bb.customerLevel;

    </select>
    <select id="customerIsExist"  parameterType="int" resultType="java.lang.Integer">
        select count(*) from customer c, user_customer uc where c.customerId = uc.customerId and uc.userId = #{shareId}
        and c.customerId = #{cusId}
    </select>
</mapper>