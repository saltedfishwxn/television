package com.aaa.dao;
import com.aaa.entity.Product;
import com.aaa.entity.ProductExample;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;

import java.util.List;
import java.util.Map;

@Mapper
public interface ProductMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table product
     *
     * @mbg.generated Tue Dec 18 14:38:19 CST 2018
     */
    long countByExample(ProductExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table product
     *
     * @mbg.generated Tue Dec 18 14:38:19 CST 2018
     */
    int deleteByExample(ProductExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table product
     *
     * @mbg.generated Tue Dec 18 14:38:19 CST 2018
     */
    int insert(Product record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table product
     *
     * @mbg.generated Tue Dec 18 14:38:19 CST 2018
     */
    int insertSelective(Product record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table product
     *
     * @mbg.generated Tue Dec 18 14:38:19 CST 2018
     */
    List<Product> selectByExample(ProductExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table product
     *
     * @mbg.generated Tue Dec 18 14:38:19 CST 2018
     */
    int updateByExampleSelective(@Param("record") Product record, @Param("example") ProductExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table product
     *
     * @mbg.generated Tue Dec 18 14:38:19 CST 2018
     */
    int updateByExample(@Param("record") Product record, @Param("example") ProductExample example);

    /**
     * 分页查询所有产品信息
     * @param amp
     * @return
     */
    List<Map> findAllByPage(Map amp);

//    List<Product> findSomeByPage(Map amp);

    /**
     * 查询总产品数量
     * @return
     */
    int getTotal();

    /**
     * 添加产品
     * @param product
     * @return
     */
    int addProduct(Product product);

    /**
     * 查询品牌
     * @return
     */
    List<Product> findMake();
    /**
     * 查询内饰颜色
     * @return
     */
    List<Product> findInteriorColor();
    /**
     * 查询外观颜色
     * @return
     */
    List<Product> findBodyColor();
    /**
     * 查询变速箱
     * @return
     */
    List<Product> findTransmission();
    /**
     * 查询发动机
     * @return
     */
    List<Product> findEngine();
    /**
     * 查询车身
     * @return
     */
    List<Product> findBody();
    /**
     * 查询款型
     * @return
     */
    List<Product> findType(Product product);
    /**
     * 查询车系
     * @return
     */
    List<Product> findLine(Product product);
    /**
     * 查询产品状态
     * @return
     */
    List<Product> findPstatus();

    /**
     * 修改产品
     * @param map
     * @return
     */
    int updateProduct(Map map);

    /**
     * 删除产品
     * @param del
     * @return
     */
    int delProduct(int del);

    /**
     * 查询产品是否存在
     * @param product
     * @return
     */
    Product findCheckBody(Product product);

    /**
     * 查询产品状态(条件查询)
     * @param product
     * @return
     */
    List<Product> findPstatusTwo(Product product);

    /**
     * 查询总产品数量(条件查询)
     * @param amp
     * @return
     */
    int getTotal(Map amp);

    /**
     * 查询产品数量
     * @param map
     * @return
     */
    List<Map<String,Object>> productCount(Map map);

    /**
     * 获取登录信息
     * @param shiroUserName
     * @return
     */
    Map<String, Object> getLoginInfo(String shiroUserName);

    /**
     * 查询产品是否存在
     * @param map
     * @return
     */
    Map isExist(Map map);

    /**
     * 批量添加
     * @param map
     */
    void addProductMany(Map<String, Object> map);

    /**
     * 产品联系录入人
     * @param map
     */
    void addProductToUser(Map<String, Object> map);
}